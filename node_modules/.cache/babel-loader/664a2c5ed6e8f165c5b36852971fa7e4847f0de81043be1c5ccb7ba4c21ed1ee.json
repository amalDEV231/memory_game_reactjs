{"ast":null,"code":"var _jsxFileName = \"/Users/amaldev/Desktop/frontend/memory_game_reactjs/src/components/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport { useNavigate } from 'react-router-dom';\nimport './GameBoard.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  numCards\n}) {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [time, setTime] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    initializeGame();\n  }, [numCards]);\n  useEffect(() => {\n    if (isGameActive && matchedCards.length === cards.length) {\n      setIsGameActive(false);\n      handleGameEnd();\n    }\n  }, [matchedCards]);\n  const initializeGame = () => {\n    const cardImages = [...Array(numCards / 2)].map((_, i) => i);\n    const shuffledCards = shuffle([...cardImages, ...cardImages].map((image, id) => ({\n      id,\n      image,\n      flipped: false\n    })));\n    setCards(shuffledCards);\n    setMatchedCards([]);\n    setSelectedCards([]);\n    setIsGameActive(true);\n    setTime(0); // Reset time when game initializes\n  };\n  const handleGameEnd = async () => {\n    const playerName = prompt(\"You win! Enter your name:\");\n    if (playerName) {\n      try {\n        await axios.post('${process.env.REACT_APP_API_URL}', {\n          name: playerName,\n          score: time\n        }); // Replace with your API URL\n        alert('Score submitted successfully!');\n      } catch (error) {\n        console.error(\"Error submitting score:\", error);\n        alert('Not valid api');\n      }\n    }\n    navigate('/');\n  };\n  const getGridStyle = () => {\n    if (numCards === 20) return {\n      gridTemplateColumns: 'repeat(5, 1fr)'\n    };\n    if (numCards === 36) return {\n      gridTemplateColumns: 'repeat(9, 1fr)'\n    };\n    if (numCards === 50) return {\n      gridTemplateColumns: 'repeat(10, 1fr)'\n    };\n  };\n  const shuffle = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n  const handleCardClick = card => {\n    if (selectedCards.length === 2 || matchedCards.includes(card.id) || card.flipped) return;\n    const newCards = cards.map(c => c.id === card.id ? {\n      ...c,\n      flipped: true\n    } : c);\n    setCards(newCards);\n    const newSelectedCards = [...selectedCards, card];\n    if (newSelectedCards.length === 2) {\n      if (newSelectedCards[0].image === newSelectedCards[1].image) {\n        setMatchedCards([...matchedCards, newSelectedCards[0].id, newSelectedCards[1].id]);\n        setSelectedCards([]);\n      } else {\n        setTimeout(() => {\n          setCards(cards.map(c => newSelectedCards.find(sc => sc.id === c.id) ? {\n            ...c,\n            flipped: false\n          } : c));\n          setSelectedCards([]);\n        }, 1000); // Flip cards back after 1 second\n      }\n    } else {\n      setSelectedCards(newSelectedCards);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      isGameActive: isGameActive,\n      setTime: setTime,\n      className: \"timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      style: getGridStyle(),\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onClick: () => handleCardClick(card)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"05pPizUE9HubBCL2Fi72dwSrhNA=\", false, function () {\n  return [useNavigate];\n});\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","Timer","useNavigate","axios","jsxDEV","_jsxDEV","GameBoard","numCards","_s","cards","setCards","selectedCards","setSelectedCards","matchedCards","setMatchedCards","isGameActive","setIsGameActive","time","setTime","navigate","initializeGame","length","handleGameEnd","cardImages","Array","map","_","i","shuffledCards","shuffle","image","id","flipped","playerName","prompt","post","name","score","alert","error","console","getGridStyle","gridTemplateColumns","array","sort","Math","random","handleCardClick","card","includes","newCards","c","newSelectedCards","setTimeout","find","sc","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","_c","$RefreshReg$"],"sources":["/Users/amaldev/Desktop/frontend/memory_game_reactjs/src/components/GameBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Timer from './Timer';\nimport { useNavigate } from 'react-router-dom';\nimport './GameBoard.css';\nimport axios from \"axios\";\n\nfunction GameBoard({ numCards }) {\n  const [cards, setCards] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [time, setTime] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    initializeGame();\n  }, [numCards]);\n\n  useEffect(() => {\n    if (isGameActive && matchedCards.length === cards.length) {\n      setIsGameActive(false);\n      handleGameEnd();\n    }\n  }, [matchedCards]);\n\n  const initializeGame = () => {\n    const cardImages = [...Array(numCards / 2)].map((_, i) => i);\n    const shuffledCards = shuffle([...cardImages, ...cardImages].map((image, id) => ({ id, image, flipped: false })));\n    setCards(shuffledCards);\n    setMatchedCards([]);\n    setSelectedCards([]);\n    setIsGameActive(true);\n    setTime(0); // Reset time when game initializes\n  };\n\n  const handleGameEnd = async () => {\n    const playerName = prompt(\"You win! Enter your name:\");\n    if (playerName) {\n      try {\n        await axios.post('${process.env.REACT_APP_API_URL}', { name: playerName, score: time }); // Replace with your API URL\n        alert('Score submitted successfully!');\n      } catch (error) {\n        console.error(\"Error submitting score:\", error);\n        alert('Not valid api');\n      }\n    }\n    navigate('/');\n  };\n\n  const getGridStyle = () => {\n    if (numCards === 20) return { gridTemplateColumns: 'repeat(5, 1fr)' };\n    if (numCards === 36) return { gridTemplateColumns: 'repeat(9, 1fr)' };\n    if (numCards === 50) return { gridTemplateColumns: 'repeat(10, 1fr)' };\n  };\n\n  const shuffle = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const handleCardClick = (card) => {\n    if (selectedCards.length === 2 || matchedCards.includes(card.id) || card.flipped) return;\n\n    const newCards = cards.map(c => c.id === card.id ? { ...c, flipped: true } : c);\n    setCards(newCards);\n    const newSelectedCards = [...selectedCards, card];\n\n    if (newSelectedCards.length === 2) {\n      if (newSelectedCards[0].image === newSelectedCards[1].image) {\n        setMatchedCards([...matchedCards, newSelectedCards[0].id, newSelectedCards[1].id]);\n        setSelectedCards([]);\n      } else {\n        setTimeout(() => {\n          setCards(cards.map(c => \n            newSelectedCards.find(sc => sc.id === c.id) \n              ? { ...c, flipped: false } \n              : c\n          ));\n          setSelectedCards([]);\n        }, 1000); // Flip cards back after 1 second\n      }\n    } else {\n      setSelectedCards(newSelectedCards);\n    }\n  };\n\n  return (\n    <div class=\"container\">\n      <Timer isGameActive={isGameActive} setTime={setTime} className=\"timer\" />\n      <br/><br/><br/>\n      <div className=\"game-board\" style={getGridStyle()}>\n        {cards.map(card => (\n          <Card\n            key={card.id}\n            card={card}\n            onClick={() => handleCardClick(card)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}